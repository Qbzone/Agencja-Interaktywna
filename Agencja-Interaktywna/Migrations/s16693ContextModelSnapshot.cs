// <auto-generated />
using System;
using Agencja_Interaktywna.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Agencja_Interaktywna.Migrations
{
    [DbContext(typeof(Models.DbContext))]
    partial class s16693ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Agencja_Interaktywna.Models.Firma", b =>
                {
                    b.Property<int>("IdFirma")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("IdFirma")
                        .HasName("Firma_pk");

                    b.ToTable("Firma");
                });

            modelBuilder.Entity("Agencja_Interaktywna.Models.Grafik", b =>
                {
                    b.Property<int>("IdPracownik")
                        .HasColumnType("int");

                    b.Property<string>("Specjalizacja")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("IdPracownik")
                        .HasName("Grafik_pk");

                    b.ToTable("Grafik");
                });

            modelBuilder.Entity("Agencja_Interaktywna.Models.JezykProgramowania", b =>
                {
                    b.Property<int>("IdJezyk")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("IdJezyk")
                        .HasName("JezykProgramowania_pk");

                    b.ToTable("JezykProgramowania");
                });

            modelBuilder.Entity("Agencja_Interaktywna.Models.Klient", b =>
                {
                    b.Property<int>("IdKlient")
                        .HasColumnType("int");

                    b.Property<string>("Priorytet")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("IdKlient")
                        .HasName("Klient_pk");

                    b.ToTable("Klient");
                });

            modelBuilder.Entity("Agencja_Interaktywna.Models.KlientFirma", b =>
                {
                    b.Property<int>("IdKlient")
                        .HasColumnType("int");

                    b.Property<int>("IdFirma")
                        .HasColumnType("int");

                    b.HasKey("IdKlient", "IdFirma")
                        .HasName("KlientFirma_pk");

                    b.HasIndex("IdFirma");

                    b.ToTable("KlientFirma");
                });

            modelBuilder.Entity("Agencja_Interaktywna.Models.Osoba", b =>
                {
                    b.Property<int>("IdOsoba")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdresEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("CzyEmailZweryfikowany")
                        .HasColumnType("bit");

                    b.Property<string>("Haslo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<Guid>("KodAktywacyjny")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("NumerTelefonuPrywatny")
                        .HasColumnType("char(9)")
                        .IsFixedLength(true)
                        .HasMaxLength(9)
                        .IsUnicode(false);

                    b.Property<string>("NumerTelefonuSluzbowego")
                        .IsRequired()
                        .HasColumnType("char(9)")
                        .IsFixedLength(true)
                        .HasMaxLength(9)
                        .IsUnicode(false);

                    b.Property<string>("Rola")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.HasKey("IdOsoba")
                        .HasName("Osoba_pk");

                    b.ToTable("Osoba");
                });

            modelBuilder.Entity("Agencja_Interaktywna.Models.Pakiet", b =>
                {
                    b.Property<int?>("IdPakiet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Oplata")
                        .HasColumnType("int");

                    b.Property<string>("RodzajOplaty")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("IdPakiet")
                        .HasName("Pakiet_pk");

                    b.ToTable("Pakiet");
                });

            modelBuilder.Entity("Agencja_Interaktywna.Models.PakietUsluga", b =>
                {
                    b.Property<int>("IdPakiet")
                        .HasColumnType("int");

                    b.Property<int>("IdUsluga")
                        .HasColumnType("int");

                    b.HasKey("IdPakiet", "IdUsluga")
                        .HasName("PakietUsluga_pk");

                    b.HasIndex("IdUsluga");

                    b.ToTable("PakietUsluga");
                });

            modelBuilder.Entity("Agencja_Interaktywna.Models.Pozycjoner", b =>
                {
                    b.Property<int>("IdPracownik")
                        .HasColumnType("int");

                    b.Property<string>("PelnionaFunkcja")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("IdPracownik")
                        .HasName("Pozycjoner_pk");

                    b.ToTable("Pozycjoner");
                });

            modelBuilder.Entity("Agencja_Interaktywna.Models.Pracownik", b =>
                {
                    b.Property<int>("IdPracownik")
                        .HasColumnType("int");

                    b.Property<string>("AdresZamieszkania")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Pensja")
                        .HasColumnType("int");

                    b.Property<string>("Pesel")
                        .IsRequired()
                        .HasColumnType("char(11)")
                        .IsFixedLength(true)
                        .HasMaxLength(11)
                        .IsUnicode(false);

                    b.Property<int>("Premia")
                        .HasColumnType("int");

                    b.Property<int>("StazPracy")
                        .HasColumnType("int");

                    b.HasKey("IdPracownik")
                        .HasName("Pracownik_pk");

                    b.ToTable("Pracownik");
                });

            modelBuilder.Entity("Agencja_Interaktywna.Models.PracownikKlient", b =>
                {
                    b.Property<int?>("IdKlient")
                        .HasColumnType("int");

                    b.Property<int?>("IdPracownik")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataRozpoczeciaSpotkania")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataZakonczeniaSpotkania")
                        .HasColumnType("datetime");

                    b.Property<string>("MiejsceSpotkania")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("IdKlient", "IdPracownik", "DataRozpoczeciaSpotkania")
                        .HasName("PracownikKlient_pk");

                    b.HasIndex("IdPracownik");

                    b.ToTable("PracownikKlient");
                });

            modelBuilder.Entity("Agencja_Interaktywna.Models.PracownikUmowa", b =>
                {
                    b.Property<int>("IdPracownik")
                        .HasColumnType("int");

                    b.Property<int>("IdUmowa")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataPodpisaniaUmowy")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataZakonczeniaUmowy")
                        .HasColumnType("datetime");

                    b.HasKey("IdPracownik", "IdUmowa", "DataPodpisaniaUmowy")
                        .HasName("PracownikUmowa_pk");

                    b.HasIndex("IdUmowa");

                    b.ToTable("PracownikUmowa");
                });

            modelBuilder.Entity("Agencja_Interaktywna.Models.PracownikZespol", b =>
                {
                    b.Property<int>("IdPracownik")
                        .HasColumnType("int");

                    b.Property<int>("IdZespol")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataPrzypisaniaPracownika")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataWypisaniaPracownika")
                        .HasColumnType("datetime");

                    b.HasKey("IdPracownik", "IdZespol", "DataPrzypisaniaPracownika")
                        .HasName("PracownikZespol_pk");

                    b.HasIndex("IdZespol");

                    b.ToTable("PracownikZespol");
                });

            modelBuilder.Entity("Agencja_Interaktywna.Models.Programista", b =>
                {
                    b.Property<int>("IdPracownik")
                        .HasColumnType("int");

                    b.Property<string>("PoziomZaawansowania")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("IdPracownik")
                        .HasName("Programista_pk");

                    b.ToTable("Programista");
                });

            modelBuilder.Entity("Agencja_Interaktywna.Models.ProgramistaJezyk", b =>
                {
                    b.Property<int>("IdPracownik")
                        .HasColumnType("int");

                    b.Property<int>("IdJezyk")
                        .HasColumnType("int");

                    b.Property<int>("Staz")
                        .HasColumnType("int");

                    b.HasKey("IdPracownik", "IdJezyk")
                        .HasName("ProgramistaJezyk_pk");

                    b.HasIndex("IdJezyk");

                    b.ToTable("ProgramistaJezyk");
                });

            modelBuilder.Entity("Agencja_Interaktywna.Models.Projekt", b =>
                {
                    b.Property<int>("IdProjekt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdFirma")
                        .HasColumnType("int");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("IdProjekt")
                        .HasName("Projekt_pk");

                    b.HasIndex("IdFirma");

                    b.ToTable("Projekt");
                });

            modelBuilder.Entity("Agencja_Interaktywna.Models.ProjektPakiet", b =>
                {
                    b.Property<int>("IdPakiet")
                        .HasColumnType("int");

                    b.Property<int>("IdProjekt")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataRozpoczeciaWspolpracy")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataZakonczeniaWspolpracy")
                        .HasColumnType("datetime");

                    b.HasKey("IdPakiet", "IdProjekt", "DataRozpoczeciaWspolpracy")
                        .HasName("ProjektPakiet_pk");

                    b.HasIndex("IdProjekt");

                    b.ToTable("ProjektPakiet");
                });

            modelBuilder.Entity("Agencja_Interaktywna.Models.Szef", b =>
                {
                    b.Property<int>("IdPracownik")
                        .HasColumnType("int");

                    b.HasKey("IdPracownik")
                        .HasName("Szef_pk");

                    b.ToTable("Szef");
                });

            modelBuilder.Entity("Agencja_Interaktywna.Models.Tester", b =>
                {
                    b.Property<int>("IdPracownik")
                        .HasColumnType("int");

                    b.Property<int>("TesterDoswiadczenie")
                        .HasColumnType("int");

                    b.HasKey("IdPracownik")
                        .HasName("Tester_pk");

                    b.ToTable("Tester");
                });

            modelBuilder.Entity("Agencja_Interaktywna.Models.Umowa", b =>
                {
                    b.Property<int>("IdUmowa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RodzajUmowy")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("IdUmowa")
                        .HasName("Umowa_pk");

                    b.ToTable("Umowa");
                });

            modelBuilder.Entity("Agencja_Interaktywna.Models.Usluga", b =>
                {
                    b.Property<int>("IdUsluga")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Klasyfikacja")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("IdUsluga")
                        .HasName("Usluga_pk");

                    b.ToTable("Usluga");
                });

            modelBuilder.Entity("Agencja_Interaktywna.Models.UslugaProjekt", b =>
                {
                    b.Property<int>("IdProjekt")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsluga")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataPrzypisaniaZadania")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataZakonczeniaZadania")
                        .HasColumnType("datetime");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("IdProjekt", "IdUsluga", "DataPrzypisaniaZadania")
                        .HasName("ZadanieProjekt_pk");

                    b.HasIndex("IdUsluga");

                    b.ToTable("UslugaProjekt");
                });

            modelBuilder.Entity("Agencja_Interaktywna.Models.Zespol", b =>
                {
                    b.Property<int?>("IdZespol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("IdZespol")
                        .HasName("Zespol_pk");

                    b.ToTable("Zespol");
                });

            modelBuilder.Entity("Agencja_Interaktywna.Models.ZespolProjekt", b =>
                {
                    b.Property<int>("IdZespol")
                        .HasColumnType("int");

                    b.Property<int>("IdProjekt")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataPrzypisaniaZespolu")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataWypisaniaZespolu")
                        .HasColumnType("datetime");

                    b.HasKey("IdZespol", "IdProjekt", "DataPrzypisaniaZespolu")
                        .HasName("ZespolProjekt_pk");

                    b.HasIndex("IdProjekt");

                    b.ToTable("ZespolProjekt");
                });

            modelBuilder.Entity("Agencja_Interaktywna.Models.Grafik", b =>
                {
                    b.HasOne("Agencja_Interaktywna.Models.Pracownik", "IdPracownikNavigation")
                        .WithOne("Grafik")
                        .HasForeignKey("Agencja_Interaktywna.Models.Grafik", "IdPracownik")
                        .HasConstraintName("Table_16_Pracownik")
                        .IsRequired();
                });

            modelBuilder.Entity("Agencja_Interaktywna.Models.Klient", b =>
                {
                    b.HasOne("Agencja_Interaktywna.Models.Osoba", "IdKlientNavigation")
                        .WithOne("Klient")
                        .HasForeignKey("Agencja_Interaktywna.Models.Klient", "IdKlient")
                        .HasConstraintName("Klient_Osoba")
                        .IsRequired();
                });

            modelBuilder.Entity("Agencja_Interaktywna.Models.KlientFirma", b =>
                {
                    b.HasOne("Agencja_Interaktywna.Models.Firma", "IdFirmaNavigation")
                        .WithMany("KlientFirma")
                        .HasForeignKey("IdFirma")
                        .HasConstraintName("KlientFirma_Firma")
                        .IsRequired();

                    b.HasOne("Agencja_Interaktywna.Models.Klient", "IdKlientNavigation")
                        .WithMany("KlientFirma")
                        .HasForeignKey("IdKlient")
                        .HasConstraintName("KlientFirma_Klient")
                        .IsRequired();
                });

            modelBuilder.Entity("Agencja_Interaktywna.Models.PakietUsluga", b =>
                {
                    b.HasOne("Agencja_Interaktywna.Models.Pakiet", "IdPakietNavigation")
                        .WithMany("PakietUsluga")
                        .HasForeignKey("IdPakiet")
                        .HasConstraintName("PakietUsluga_Pakiet")
                        .IsRequired();

                    b.HasOne("Agencja_Interaktywna.Models.Usluga", "IdUslugaNavigation")
                        .WithMany("PakietUsluga")
                        .HasForeignKey("IdUsluga")
                        .HasConstraintName("PakietUsluga_Usluga")
                        .IsRequired();
                });

            modelBuilder.Entity("Agencja_Interaktywna.Models.Pozycjoner", b =>
                {
                    b.HasOne("Agencja_Interaktywna.Models.Pracownik", "IdPracownikNavigation")
                        .WithOne("Pozycjoner")
                        .HasForeignKey("Agencja_Interaktywna.Models.Pozycjoner", "IdPracownik")
                        .HasConstraintName("Table_15_Pracownik")
                        .IsRequired();
                });

            modelBuilder.Entity("Agencja_Interaktywna.Models.Pracownik", b =>
                {
                    b.HasOne("Agencja_Interaktywna.Models.Osoba", "IdPracownikNavigation")
                        .WithOne("Pracownik")
                        .HasForeignKey("Agencja_Interaktywna.Models.Pracownik", "IdPracownik")
                        .HasConstraintName("Pracownik_Osoba")
                        .IsRequired();
                });

            modelBuilder.Entity("Agencja_Interaktywna.Models.PracownikKlient", b =>
                {
                    b.HasOne("Agencja_Interaktywna.Models.Klient", "IdKlientNavigation")
                        .WithMany("PracownikKlient")
                        .HasForeignKey("IdKlient")
                        .HasConstraintName("PracownikKlient_Klient")
                        .IsRequired();

                    b.HasOne("Agencja_Interaktywna.Models.Pracownik", "IdPracownikNavigation")
                        .WithMany("PracownikKlient")
                        .HasForeignKey("IdPracownik")
                        .HasConstraintName("PracownikKlient_Pracownik")
                        .IsRequired();
                });

            modelBuilder.Entity("Agencja_Interaktywna.Models.PracownikUmowa", b =>
                {
                    b.HasOne("Agencja_Interaktywna.Models.Pracownik", "IdPracownikNavigation")
                        .WithMany("PracownikUmowa")
                        .HasForeignKey("IdPracownik")
                        .HasConstraintName("PracownikUmowa_Pracownik")
                        .IsRequired();

                    b.HasOne("Agencja_Interaktywna.Models.Umowa", "IdUmowaNavigation")
                        .WithMany("PracownikUmowa")
                        .HasForeignKey("IdUmowa")
                        .HasConstraintName("PracownikUmowa_Umowa")
                        .IsRequired();
                });

            modelBuilder.Entity("Agencja_Interaktywna.Models.PracownikZespol", b =>
                {
                    b.HasOne("Agencja_Interaktywna.Models.Pracownik", "IdPracownikNavigation")
                        .WithMany("PracownikZespol")
                        .HasForeignKey("IdPracownik")
                        .HasConstraintName("Table_22_Pracownik")
                        .IsRequired();

                    b.HasOne("Agencja_Interaktywna.Models.Zespol", "IdZespolNavigation")
                        .WithMany("PracownikZespol")
                        .HasForeignKey("IdZespol")
                        .HasConstraintName("Table_22_Zespol")
                        .IsRequired();
                });

            modelBuilder.Entity("Agencja_Interaktywna.Models.Programista", b =>
                {
                    b.HasOne("Agencja_Interaktywna.Models.Pracownik", "IdPracownikNavigation")
                        .WithOne("Programista")
                        .HasForeignKey("Agencja_Interaktywna.Models.Programista", "IdPracownik")
                        .HasConstraintName("Table_17_Pracownik")
                        .IsRequired();
                });

            modelBuilder.Entity("Agencja_Interaktywna.Models.ProgramistaJezyk", b =>
                {
                    b.HasOne("Agencja_Interaktywna.Models.JezykProgramowania", "IdJezykNavigation")
                        .WithMany("ProgramistaJezyk")
                        .HasForeignKey("IdJezyk")
                        .HasConstraintName("Table_18_JezykProgramowania")
                        .IsRequired();

                    b.HasOne("Agencja_Interaktywna.Models.Programista", "IdPracownikNavigation")
                        .WithMany("ProgramistaJezyk")
                        .HasForeignKey("IdPracownik")
                        .HasConstraintName("Table_18_Programista")
                        .IsRequired();
                });

            modelBuilder.Entity("Agencja_Interaktywna.Models.Projekt", b =>
                {
                    b.HasOne("Agencja_Interaktywna.Models.Firma", "IdFirmaNavigation")
                        .WithMany("Projekt")
                        .HasForeignKey("IdFirma")
                        .HasConstraintName("Projekt_Firma");
                });

            modelBuilder.Entity("Agencja_Interaktywna.Models.ProjektPakiet", b =>
                {
                    b.HasOne("Agencja_Interaktywna.Models.Pakiet", "IdPakietNavigation")
                        .WithMany("ProjektPakiet")
                        .HasForeignKey("IdPakiet")
                        .HasConstraintName("ProjektPakiet_Pakiet")
                        .IsRequired();

                    b.HasOne("Agencja_Interaktywna.Models.Projekt", "IdProjektNavigation")
                        .WithMany("ProjektPakiet")
                        .HasForeignKey("IdProjekt")
                        .HasConstraintName("ProjektPakiet_Projekt")
                        .IsRequired();
                });

            modelBuilder.Entity("Agencja_Interaktywna.Models.Szef", b =>
                {
                    b.HasOne("Agencja_Interaktywna.Models.Pracownik", "IdPracownikNavigation")
                        .WithOne("Szef")
                        .HasForeignKey("Agencja_Interaktywna.Models.Szef", "IdPracownik")
                        .HasConstraintName("Pracownik_Szef")
                        .IsRequired();
                });

            modelBuilder.Entity("Agencja_Interaktywna.Models.Tester", b =>
                {
                    b.HasOne("Agencja_Interaktywna.Models.Pracownik", "IdPracownikNavigation")
                        .WithOne("Tester")
                        .HasForeignKey("Agencja_Interaktywna.Models.Tester", "IdPracownik")
                        .HasConstraintName("Table_14_Pracownik")
                        .IsRequired();
                });

            modelBuilder.Entity("Agencja_Interaktywna.Models.UslugaProjekt", b =>
                {
                    b.HasOne("Agencja_Interaktywna.Models.Projekt", "IdProjektNavigation")
                        .WithMany("UslugaProjekt")
                        .HasForeignKey("IdProjekt")
                        .HasConstraintName("Table_26_Projekt")
                        .IsRequired();

                    b.HasOne("Agencja_Interaktywna.Models.Usluga", "IdUslugaNavigation")
                        .WithMany("UslugaProjekt")
                        .HasForeignKey("IdUsluga")
                        .HasConstraintName("Table_26_Zadanie")
                        .IsRequired();
                });

            modelBuilder.Entity("Agencja_Interaktywna.Models.ZespolProjekt", b =>
                {
                    b.HasOne("Agencja_Interaktywna.Models.Projekt", "IdProjektNavigation")
                        .WithMany("ZespolProjekt")
                        .HasForeignKey("IdProjekt")
                        .HasConstraintName("Table_24_Projekt")
                        .IsRequired();

                    b.HasOne("Agencja_Interaktywna.Models.Zespol", "IdZespolNavigation")
                        .WithMany("ZespolProjekt")
                        .HasForeignKey("IdZespol")
                        .HasConstraintName("Table_24_Zespol")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
